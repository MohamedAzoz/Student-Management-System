// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Student_Management_System.Data;

#nullable disable

namespace Student_Management_System.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250707040223_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Student_Management_System.Entities.Course", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Number_of_hours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Courses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "#1",
                            CourseCode = "En01",
                            Department = "Computer Science",
                            Name = "DataBase",
                            Number_of_hours = 40
                        },
                        new
                        {
                            Id = "#2",
                            CourseCode = "En02",
                            Department = "Computer Science",
                            Name = "C#",
                            Number_of_hours = 40
                        },
                        new
                        {
                            Id = "#3",
                            CourseCode = "En03",
                            Department = "Computer Science",
                            Name = "OOP",
                            Number_of_hours = 40
                        },
                        new
                        {
                            Id = "#4",
                            CourseCode = "AR01",
                            Department = "English Literature",
                            Name = "Lisning",
                            Number_of_hours = 45
                        },
                        new
                        {
                            Id = "#5",
                            CourseCode = "AR02",
                            Department = "English Literature",
                            Name = "Reading",
                            Number_of_hours = 45
                        },
                        new
                        {
                            Id = "#6",
                            CourseCode = "AR03",
                            Department = "English Literature",
                            Name = "Writing",
                            Number_of_hours = 50
                        },
                        new
                        {
                            Id = "#7",
                            CourseCode = "SC01",
                            Department = "Physics",
                            Name = "Physics",
                            Number_of_hours = 50
                        },
                        new
                        {
                            Id = "#8",
                            CourseCode = "SC02",
                            Department = "Physics",
                            Name = "Mathematics",
                            Number_of_hours = 50
                        },
                        new
                        {
                            Id = "#9",
                            CourseCode = "SC03",
                            Department = "Physics",
                            Name = "Chemistry",
                            Number_of_hours = 50
                        });
                });

            modelBuilder.Entity("Student_Management_System.Entities.Enrollment", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "#7994",
                            CourseId = "#1",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = "12345678901234"
                        },
                        new
                        {
                            Id = "#9451",
                            CourseId = "#2",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = "12345678901234"
                        },
                        new
                        {
                            Id = "#2454",
                            CourseId = "#3",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = "12345678901234"
                        },
                        new
                        {
                            Id = "#1454",
                            CourseId = "#4",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = "23456789012345"
                        },
                        new
                        {
                            Id = "#8541",
                            CourseId = "#5",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = "23456789012345"
                        },
                        new
                        {
                            Id = "#1234",
                            CourseId = "#6",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = "23456789012345"
                        },
                        new
                        {
                            Id = "#1245",
                            CourseId = "#7",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = "34567890123456"
                        },
                        new
                        {
                            Id = "#9884",
                            CourseId = "#8",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = "34567890123456"
                        },
                        new
                        {
                            Id = "#7845",
                            CourseId = "#9",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = "34567890123456"
                        });
                });

            modelBuilder.Entity("Student_Management_System.Entities.Grade", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("EnrollmentId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("EnrollmentId")
                        .IsUnique();

                    b.ToTable("Grades", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnrollmentId = "#7994",
                            Value = 85.5m
                        },
                        new
                        {
                            Id = 2,
                            EnrollmentId = "#9451",
                            Value = 90m
                        },
                        new
                        {
                            Id = 3,
                            EnrollmentId = "#2454",
                            Value = 78m
                        },
                        new
                        {
                            Id = 4,
                            EnrollmentId = "#1454",
                            Value = 82m
                        },
                        new
                        {
                            Id = 5,
                            EnrollmentId = "#8541",
                            Value = 87.5m
                        },
                        new
                        {
                            Id = 6,
                            EnrollmentId = "#1234",
                            Value = 79m
                        },
                        new
                        {
                            Id = 7,
                            EnrollmentId = "#1245",
                            Value = 88m
                        },
                        new
                        {
                            Id = 8,
                            EnrollmentId = "#9884",
                            Value = 85m
                        },
                        new
                        {
                            Id = 9,
                            EnrollmentId = "#7845",
                            Value = 90m
                        });
                });

            modelBuilder.Entity("Student_Management_System.Entities.Student", b =>
                {
                    b.Property<string>("SSN")
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("College")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("DATE");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.HasKey("SSN");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            SSN = "12345678901234",
                            College = "Engineering College",
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Computer Science",
                            Name = "John Doe"
                        },
                        new
                        {
                            SSN = "23456789012345",
                            College = "Arts College",
                            DateOfBirth = new DateTime(2001, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "English Literature",
                            Name = "Jane Smith"
                        },
                        new
                        {
                            SSN = "34567890123456",
                            College = "Science College",
                            DateOfBirth = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Physics",
                            Name = "Alice Johnson"
                        });
                });

            modelBuilder.Entity("Student_Management_System.Entities.Enrollment", b =>
                {
                    b.HasOne("Student_Management_System.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Student_Management_System.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Student_Management_System.Entities.Grade", b =>
                {
                    b.HasOne("Student_Management_System.Entities.Enrollment", "Enrollment")
                        .WithOne("Grade")
                        .HasForeignKey("Student_Management_System.Entities.Grade", "EnrollmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollment");
                });

            modelBuilder.Entity("Student_Management_System.Entities.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("Student_Management_System.Entities.Enrollment", b =>
                {
                    b.Navigation("Grade")
                        .IsRequired();
                });

            modelBuilder.Entity("Student_Management_System.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
